<script>
        const cst_money_formate = "{{ shop.money_format | escape }}";
        const money_with_currency_format = "{{ shop.money_with_currency_format | escape }}";
        </script>
        <script>
        let cstCartItems=[],products=[],extra_pricing=[],loop__=null,loop__1=null;const cartItemSelecter=".CartItem, .cart-item, .cart_item, .ajaxcart__product, .cart__row:not(.cart__header-labels, .cart__row--heading, .visually-hidden)",cartItemPriceSelecter=".Price, .price, .h5:last-child, .cart__final-price span, .cart__item-total, .cart__price, .total .product-subtotal, .product-price .money",hideCartCount=".cart-count-bubble, .header-bar__cart-count, #CartCount";async function getCarts(){let t=null;return await fetch("/cart.json").then((t=>{if(t.ok)return t.json();throw new Error("Something went wrong")})).then((e=>{t=e})).catch((t=>{})),t}function updateCart(t,e,r){cstCartItems.forEach(((t,n)=>{n+1!=e&&cstCartItems[e].properties._cst_extra_pricing_ref===t.properties._cst_extra_pricing_ref&&(line=n+1,r=t.properties._extra_pricing)})),null!=line&&null!=r&&updateQty(line,t*r)}function updateQty(t,e){fetch("/cart/change.js",{method:"POST",body:JSON.stringify({line:t,quantity:e}),headers:{"Content-type":"application/json"}}).then((function(t){return t.ok?t.json():Promise.reject(t)})).then((function(t){calcCart(),window.location.reload()})).catch((function(t){}))}function calcCart(){getCarts().then((t=>{if("undifined"!=typeof t.items){cstCartItems=t.items;const e=[];if(0==cstCartItems.length)return clearInterval(loop__),clearInterval(loop__1),0;if(cstCartItems.forEach(((t,r)=>{null!=t.properties&&void 0!==t.properties._cst_extra_pricing_ref&&null!=t.properties._cst_extra_pricing_ref&&e.push(t)})),0==e.length)return clearInterval(loop__),clearInterval(loop__1),0;hideExtraPricing()}}))}function formatMoney(t,e,r,n){void 0===e&&(e=2),void 0===r&&(r="."),void 0===n&&(n=",");try{e=Math.abs(e),e=isNaN(e)?2:e;const c=t<0?"-":"";return i=parseInt(t=Math.abs(Number(t)||0).toFixed(e)).toString(),j=i.length>3?i.length%3:0,c+(j?i.substr(0,j)+n:"")+i.substr(j).replace(/(\d{3})(?=\d)/g,"$1"+n)+(e?r+Math.abs(t-i).toFixed(e).slice(2):"")}catch(t){}}function hideExtraPricing(){const t=[],e=[],r=[],n=[];let c=!1;cstCartItems.forEach(((c,i)=>{c.line=i+1,"customizing-extra-pricing"==c.handle?(t.push(i+1),e.push(c)):r.push(c),null!=c.properties&&void 0!==c.properties._cst_extra_pricing_ref&&null!=c.properties._cst_extra_pricing_ref&&n.push(c)}));for(const t of r){let e=!1;if(null!=t.properties&&void 0!==t.properties._cst_extra_pricing_ref){let r=t.properties._cst_extra_pricing_ref;cstCartItems.forEach(((n,i)=>{if("customizing-extra-pricing"==n.handle&&n.properties._cst_extra_pricing_ref==r){e=!0;let r=(t.final_line_price+n.final_line_price)/100,a=document.querySelectorAll(cartItemSelecter)[t.line-1];if(void 0!==a){let t=a.querySelectorAll(cartItemPriceSelecter);void 0!==t&&(r=cst_money_formate.indexOf("amount_with_comma_separator")>-1?formatMoney(r,2,",","."):formatMoney(r),r=money_with_currency_format.replace(cst_money_formate,r),t.forEach((t=>{t.innerHTML=r})))}let o=document.querySelectorAll(cartItemSelecter)[n.line-1];if(void 0!==o&&(o.style.display="none",c=!0),document.querySelectorAll(hideCartCount).forEach((t=>{void 0!==t&&(t.innerHTML="<span></span>")})),parseInt(t.properties._extra_pricing)*t.quantity!=n.quantity){let e=t.properties._extra_pricing;updateQty(i+1,t.quantity*e)}}}))}e||null==t.properties||void 0===t.properties._cst_extra_pricing_ref||null==t.properties._cst_extra_pricing_ref||updateQty(t.line,0)}for(const t of e){const e=document.querySelectorAll("[name='updates[]'][value='"+t.quantity+"']");for(const t of e)c||cartItemSelecter.split(", ").forEach((e=>{try{null!=t.closest(e)&&(c=!0,t.closest(e).style.display="none")}catch(t){}}));let r=!1;if(cstCartItems.forEach(((e,n)=>{"customizing-extra-pricing"!=e.handle&&null!=e.properties&&e.properties._cst_extra_pricing_ref==t.properties._cst_extra_pricing_ref&&(r=!0)})),!r){let e=t.properties._extra_pricing,r=0;updateQty(t.line,r*e)}}if(!c){document.querySelectorAll("a[href*='/cart/change']").forEach((e=>{let r=e.getAttribute("href").replace("/cart/change?",""),n=new URLSearchParams(r),c=Object.fromEntries(n);0==c.quantity&&t.includes(parseInt(c.line))&&cartItemSelecter.split(", ").forEach((t=>{try{null!=e.closest(t)&&(e.closest(t).style.display="none")}catch(t){}}))}))}}function changed(t){(t.target.matches("a[href*='/cart/change']")||t.target.matches("[name='updates[]']"))&&calcCart()}loop__=setInterval((function(){calcCart()}),1e3),loop__1=setInterval((function(){hideExtraPricing()}),100),calcCart(),document.addEventListener("click",(function(t){changed(t)})),document.addEventListener("change",(function(t){changed(t)}));
        </script>
        